@using HotelKoKoMu_CardRegister.Models;
@model HotelKoKoMu_CardRegister.Models.CardRegisterModel
@{
    ViewBag.Title = "CardRegisterPage22";
    Layout = "~/Views/Shared/_CardRegisterLayout.cshtml";
}
<style>
    .modal-footer {
        display: inline-block !important;
    }
</style>

<table class="table-bordered kokomuTable">
    <tbody>
        <tr>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.GuestName</label>
            </td>
            <td class="td2">
                <label id="lblGuestName"></label>
            </td>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.KanaName</label>
            </td>
            <td class="td2">
                <label id="lblKanagataName"></label>
            </td>
        </tr>
        <tr>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.PostalCode</label>
            </td>
            <td class="td2">
                <label id="lblPostalCode"></label>
            </td>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.PhoneNo</label>
            </td>
            <td class="td2">
                <label id="lblPhoneNo"></label>
            </td>
        </tr>
        <tr>
            <td rowspan="2">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.Address</label>
            </td>
            <td colspan="3">
                <label id="lblAddress1"></label>
            </td>


        </tr>
        <tr>
            <td colspan="3">
                <label id="lblAddress2"></label>
            </td>
        </tr>
        <tr>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.WorkPlace</label>
            </td>
            <td colspan="3">
                <label id="lblWorkPlace"></label>
            </td>
        </tr>
        <tr>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.Nationality</label>
            </td>
            <td class="td2">
                <label id="lblCountry"></label>
            </td>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.Passport</label>
            </td>
            <td class="td2">
                <label id="lblPassport"></label>
            </td>
        </tr>
    </tbody>
</table>

<table class="kokomuTable rowspace">
    <tbody>
        <tr>
            <td class="td1" style="border-right:hidden;">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.ArrivalDate</label>
            </td>
            <td class="td2" style="border-right:hidden;">
                <label id="lblArrivalDate"></label>
            </td>
            <td class="td1" style="border-right:hidden;">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.DepartureDate</label>
            </td>
            <td class="td2">
                <label id="lblDepartureDate"></label>
            </td>
        </tr>
    </tbody>
</table>
<table class="kokomuTable">
    <tbody>
        <tr>
            <td class="td1">
                <label>@HotelKoKoMu_CardRegister.Resources.Resources.Sign</label>
            </td>

            <td colspan="3">
                <label id="lblSign"></label>
            </td>

        </tr>
    </tbody>

</table>
<div class="col-md-4 offset-md-4">
    <button class="clsfinish" id="btnfinish">@HotelKoKoMu_CardRegister.Resources.Resources.Complete</button>
</div>

<h1>GeeksforGeeks</h1>
<b>Draw anything you want</b>
<hr>
<canvas id="canvas"></canvas>



@section Scripts
{
   
    <script type="text/javascript">
        $(document).ready(function () {

          
        })
        // wait for the content of the window element 
        // to load, then performs the operations. 
        // This is considered best practice. 
        window.addEventListener('load', () => {

            resize(); // Resizes the canvas once the window loads 
            document.addEventListener('mousedown', startPainting);
            document.addEventListener('mouseup', stopPainting);
            document.addEventListener('mousemove', sketch);
            window.addEventListener('resize', resize);
        });

        const canvas = document.querySelector('#canvas');

        // Context for the canvas for 2 dimensional operations 
        const ctx = canvas.getContext('2d');

        // Resizes the canvas to the available size of the window. 
        function resize() {
            ctx.canvas.width = window.innerWidth;
            ctx.canvas.height = window.innerHeight;
        }

        // Stores the initial position of the cursor 
        let coord = { x: 0, y: 0 };

        // This is the flag that we are going to use to  
        // trigger drawing 
        let paint = false;

        // Updates the coordianates of the cursor when  
        // an event e is triggered to the coordinates where  
        // the said event is triggered. 
        function getPosition(event) {
            coord.x = event.clientX - canvas.offsetLeft;
            coord.y = event.clientY - canvas.offsetTop;
        }

        // The following functions toggle the flag to start 
        // and stop drawing 
        function startPainting(event) {
            paint = true;
            getPosition(event);
        }
        function stopPainting() {
            paint = false;
        }

        function sketch(event) {
            if (!paint) return;
            ctx.beginPath();

            ctx.lineWidth = 5;

            // Sets the end of the lines drawn 
            // to a round shape. 
            ctx.lineCap = 'round';

            ctx.strokeStyle = 'green';

            // The cursor to start drawing 
            // moves to this coordinate 
            ctx.moveTo(coord.x, coord.y);

            // The position of the cursor 
            // gets updated as we move the 
            // mouse around. 
            getPosition(event);

            // A line is traced from start 
            // coordinate to this coordinate 
            ctx.lineTo(coord.x, coord.y);

            // Draws the line. 
            ctx.stroke();
        }
            //$(".kokomuTable td").click(function () {
            //    var text = $(this).find("label").attr("id")

            //    if (text == "lblGuestName") {
            //        ShowPopUp();
            //    }

            //});
      
    </script>
}







